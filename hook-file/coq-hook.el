
(defun split-and-execute ()
  (interactive)
  (when (one-window-p)
    (split-window-horizontally))
  (setq bn (buffer-name))
  (save-buffer)
  (other-window 1)
  (eshell)
  (insert "coqc ./" bn)
  (eshell-send-input)
  (other-window 1)
  )

(defun coq-newline-and-indent ()
  (interactive)
  (indent-for-tab-command)
  (newline)
  (indent-for-tab-command)
  (indent-for-tab-command)
  (indent-for-tab-command)
  )

(add-hook 'coq-mode-hook
          '(lambda ()
             (hs-minor-mode 1)
             (setq comment-style 'multi-line)
             (define-key coq-mode-map [(C o) (C o)] 'split-and-execute)
             (define-key coq-mode-map [(C x) (t)] 'indent-for-tab-command)
             (define-key coq-mode-map "\C-i" 'hs-toggle-hiding)
             (define-key coq-mode-map "\C-c;" 'comment-or-uncomment-region)
             (define-key coq-mode-map [(C m)] 'coq-newline-and-indent)
             ))
(load-file "/usr/share/emacs/site-lisp/ProofGeneral/generic/proof-site.el")
;(load "/opt/local/share/ProofGeneral/generic/proof-site.el")
(defadvice coq-mode-config (after deactivate-holes-mode () activate)
  "Deactivate holes-mode when coq-mode is activated."
  (progn (holes-mode 0))
  )
(add-hook 'proof-mode-hook
          '(lambda ()
             (define-key proof-mode-map (kbd "C-c C-j") 'proof-goto-point)))

(provide 'coq-hook)
